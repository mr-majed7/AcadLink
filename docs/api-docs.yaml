openapi: 3.1.0
info:
  title: AcadLink
  description: A platform to manage and share academic resources
servers:
- url: http://localhost:8080/v1
  description: Generated server url
security:
- bearerAuth: []
tags:
- name: 2. Email Verification
  description: Endpoints for email verification and OTP management
- name: 6. Find Materials
  description: Endpoints for finding materials
- name: 3. Profile Management
  description: Endpoints for managing user profiles
- name: 4. Folder Management
  description: Endpoints for managing folders
- name: 5. Materials Management
  description: Endpoints for managing materials
- name: 7. Peer Management
  description: Endpoints to manage peers and search for users
- name: 1. Public
  description: "Public endpoints to Sign Up, Sign In"
paths:
  /peers/accept-peer-request/{reqId}:
    put:
      tags:
      - 7. Peer Management
      summary: Accept peer request
      operationId: acceptRequest
      parameters:
      - name: reqId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseBoolean"
  /material/update-material/{id}:
    put:
      tags:
      - 5. Materials Management
      summary: Update material by ID
      operationId: updateMaterial
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/MaterialAddDTO"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseMaterialResponseDTO"
  /folder/update-folder/{folderId}:
    put:
      tags:
      - 4. Folder Management
      summary: Update a specific folder by ID
      operationId: updateFolder
      parameters:
      - name: folderId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FolderCreateDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseUpdateFolderResponseDTO"
  /public/sign-up:
    post:
      tags:
      - 1. Public
      summary: Sign up a new user
      operationId: signUp
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserSignUpDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /public/login:
    post:
      tags:
      - 1. Public
      summary: Log in a user
      operationId: logIn
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLoginDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseString"
  /peers/send-peer-request/{userId}:
    post:
      tags:
      - 7. Peer Management
      summary: Send peer request
      operationId: addPeer
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseBoolean"
  /material/add-material:
    post:
      tags:
      - 5. Materials Management
      summary: Add a new material
      operationId: addMaterials
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/MaterialAddDTO"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseMaterialResponseDTO"
  /folder/create:
    post:
      tags:
      - 4. Folder Management
      summary: Create a new folder
      operationId: createFolder
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FolderCreateDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseAllFolderResponseDTO"
  /auth/verify-email:
    post:
      tags:
      - 2. Email Verification
      summary: Verify email address
      description: Verifies a user's email address using the provided OTP code. The
        OTP code must be entered within 5 minutes of being sent.
      operationId: verifyEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmailVerificationRequest"
        required: true
      responses:
        "400":
          description: Invalid verification code or user not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/EmailVerificationResponse"
        "200":
          description: Email verified successfully
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/EmailVerificationResponse"
  /auth/resend-verification:
    post:
      tags:
      - 2. Email Verification
      summary: Resend verification code
      description: Resends the verification code to the user's email address. Use
        this endpoint if the original code expired or was not received.
      operationId: resendVerification
      parameters:
      - name: email
        in: query
        description: Email address to resend verification code to
        required: true
        schema:
          type: string
      responses:
        "400":
          description: User not found or email already verified
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/EmailVerificationResponse"
        "200":
          description: Verification code sent successfully
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/EmailVerificationResponse"
  /view-peers-materials/{peers-user-id}:
    get:
      tags:
      - 6. Find Materials
      summary: View Materilas of Peers
      operationId: viewPeersMaterials
      parameters:
      - name: peers-user-id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseListMaterialResponseDTO"
  /user/get-user:
    get:
      tags:
      - 3. Profile Management
      operationId: getUser
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseUserResponseDTO"
  /search-materials:
    get:
      tags:
      - 6. Find Materials
      summary: Search Materials with keywords
      operationId: searchMaterials
      parameters:
      - name: keyWords
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseListMaterialResponseDTO"
  /public/check-username/{userName}:
    get:
      tags:
      - 1. Public
      summary: Check if username exists
      operationId: checkUsername
      parameters:
      - name: userName
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /peers/search-user/{entry}:
    get:
      tags:
      - 7. Peer Management
      summary: Search users
      operationId: searchUsers
      parameters:
      - name: entry
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseListSearchResultDTO"
  /peers/get-peers:
    get:
      tags:
      - 7. Peer Management
      summary: Get peers
      operationId: getPeers
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseListPeerInfoDTO"
  /peers/get-peer-requests/{type}:
    get:
      tags:
      - 7. Peer Management
      summary: Get peer requests
      operationId: getRequests
      parameters:
      - name: type
        in: path
        required: true
        schema:
          type: string
          enum:
          - SENT
          - RECEIVED
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseListPeerInfoDTO"
  /material/get-materials-by-type/{type}/{folder-id}:
    get:
      tags:
      - 5. Materials Management
      summary: Get materials by type and folder ID
      operationId: getMaterialByType
      parameters:
      - name: type
        in: path
        required: true
        schema:
          type: string
          enum:
          - BOOK
          - LECTURE_SLIDE
          - LECTURE_NOTE
          - OTHER
      - name: folder-id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseListMaterialResponseDTO"
  /material/get-material-by-id/{id}:
    get:
      tags:
      - 5. Materials Management
      summary: Get material by ID
      operationId: getMaterial
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseMaterialResponseDTO"
  /folder/get-folder/{folderId}:
    get:
      tags:
      - 4. Folder Management
      summary: Get a specific folder by ID
      operationId: getFolder
      parameters:
      - name: folderId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseFolderResponseDTO"
  /folder/get-all:
    get:
      tags:
      - 4. Folder Management
      summary: Get all folders
      operationId: getAllFolders
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseListAllFolderResponseDTO"
  /peers/remove-peer/{peerId}:
    delete:
      tags:
      - 7. Peer Management
      summary: Remove peer
      operationId: removePeer
      parameters:
      - name: peerId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseBoolean"
  /material/delete-material/{id}:
    delete:
      tags:
      - 5. Materials Management
      summary: Delete material by ID
      operationId: deleteMaterial
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseBoolean"
components:
  schemas:
    ApiResponseBoolean:
      type: object
      properties:
        data:
          type: boolean
        error:
          type: string
        status:
          type: integer
          format: int32
    MaterialAddDTO:
      type: object
      properties:
        name:
          type: string
        folderId:
          type: string
          format: uuid
        type:
          type: string
          enum:
          - BOOK
          - LECTURE_SLIDE
          - LECTURE_NOTE
          - OTHER
        link:
          type: string
        file:
          type: string
          format: binary
        privacy:
          type: string
          enum:
          - PUBLIC
          - PRIVATE
          - FRIENDS
          - PEERS
          - INSTITUTIONAL
    ApiResponseMaterialResponseDTO:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/MaterialResponseDTO"
        error:
          type: string
        status:
          type: integer
          format: int32
    MaterialResponseDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        link:
          type: string
        type:
          type: string
          enum:
          - BOOK
          - LECTURE_SLIDE
          - LECTURE_NOTE
          - OTHER
        privacy:
          type: string
          enum:
          - PUBLIC
          - PRIVATE
          - FRIENDS
          - PEERS
          - INSTITUTIONAL
        folderId:
          type: string
          format: uuid
    FolderCreateDTO:
      type: object
      properties:
        name:
          type: string
        privacy:
          type: string
          enum:
          - PUBLIC
          - PRIVATE
          - FRIENDS
          - PEERS
          - INSTITUTIONAL
    ApiResponseUpdateFolderResponseDTO:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/UpdateFolderResponseDTO"
        error:
          type: string
        status:
          type: integer
          format: int32
    UpdateFolderResponseDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        createdAt:
          type: string
          format: date
        privacy:
          type: string
          enum:
          - PUBLIC
          - PRIVATE
          - FRIENDS
          - PEERS
          - INSTITUTIONAL
    UserSignUpDTO:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        institute:
          type: string
        email:
          type: string
        userName:
          type: string
        password:
          type: string
    UserLoginDTO:
      type: object
      properties:
        usernameorEmail:
          type: string
        password:
          type: string
    ApiResponseString:
      type: object
      properties:
        data:
          type: string
        error:
          type: string
        status:
          type: integer
          format: int32
    AllFolderResponseDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        createdAt:
          type: string
          format: date
        privacy:
          type: string
          enum:
          - PUBLIC
          - PRIVATE
          - FRIENDS
          - PEERS
          - INSTITUTIONAL
    ApiResponseAllFolderResponseDTO:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/AllFolderResponseDTO"
        error:
          type: string
        status:
          type: integer
          format: int32
    EmailVerificationRequest:
      type: object
      properties:
        email:
          type: string
        otp:
          type: string
          maxLength: 6
          minLength: 6
      required:
      - email
      - otp
    EmailVerificationResponse:
      type: object
      properties:
        verified:
          type: boolean
        message:
          type: string
    ApiResponseListMaterialResponseDTO:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/MaterialResponseDTO"
        error:
          type: string
        status:
          type: integer
          format: int32
    ApiResponseUserResponseDTO:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/UserResponseDTO"
        error:
          type: string
        status:
          type: integer
          format: int32
    UserResponseDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
        lastName:
          type: string
        institute:
          type: string
        email:
          type: string
        userName:
          type: string
        createdAt:
          type: string
          format: date
    ApiResponseListSearchResultDTO:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/SearchResultDTO"
        error:
          type: string
        status:
          type: integer
          format: int32
    SearchResultDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        username:
          type: string
        institute:
          type: string
        peerStatus:
          type: string
          enum:
          - "FALSE"
          - PENDING
          - ACCEPTED
    ApiResponseListPeerInfoDTO:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/PeerInfoDTO"
        error:
          type: string
        status:
          type: integer
          format: int32
    PeerInfoDTO:
      type: object
      properties:
        reqId:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        institute:
          type: string
        userName:
          type: string
    ApiResponseFolderResponseDTO:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/FolderResponseDTO"
        error:
          type: string
        status:
          type: integer
          format: int32
    FolderResponseDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        createdAt:
          type: string
          format: date
        privacy:
          type: string
          enum:
          - PUBLIC
          - PRIVATE
          - FRIENDS
          - PEERS
          - INSTITUTIONAL
        materials:
          type: array
          items:
            $ref: "#/components/schemas/MaterialResponseDTO"
    ApiResponseListAllFolderResponseDTO:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/AllFolderResponseDTO"
        error:
          type: string
        status:
          type: integer
          format: int32
  securitySchemes:
    bearerAuth:
      type: http
      name: Authorization
      in: header
      scheme: bearer
      bearerFormat: JWT
